{"version":3,"file":"tile-weather.component.js","sourceRoot":"","sources":["../../../Users/gusdev/code/rumpel/tmp/broccoli_type_script_compiler-input_base_path-f2J48Fb3.tmp/0/src/app/dashboard/tile-weather/tile-weather.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyC,eAAe,CAAC,CAAA;AACzD,gCAA+B,gCAAgC,CAAC,CAAA;AAChE,IAAY,MAAM,WAAM,QAAQ,CAAC,CAAA;AASjC;IAQE,8BAAoB,UAA0B;QAA1B,eAAU,GAAV,UAAU,CAAgB;IAAG,CAAC;IAElD,uCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,SAAS,CACzD,UAAA,QAAQ;YACN,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;YAC7E,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,IAAI,KAAK,OAAO,CAAC;gBAAC,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;YACvE,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC;YAC3C,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC5B,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC;YACpC,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,WAAW,CAAC;YACtC,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,CAAC;QACvE,CAAC,EACD,UAAA,GAAG,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,GAAG,CAAC,EAAvD,CAAuD,CAAC,CAAC;IACpE,CAAC;IA7BH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,mBAAmB;YAC7B,WAAW,EAAE,6BAA6B;YAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;YACzC,SAAS,EAAE,CAAC,gCAAc,CAAC;SAC5B,CAAC;;4BAAA;IAyBF,2BAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,4BAAoB,uBAwBhC,CAAA","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { WeatherService } from '../../services/weather.service';\nimport * as moment from 'moment';\n\n@Component({\n  moduleId: module.id,\n  selector: 'rump-tile-weather',\n  templateUrl: 'tile-weather.component.html',\n  styleUrls: ['tile-weather.component.css'],\n  providers: [WeatherService]\n})\nexport class TileWeatherComponent implements OnInit {\n  public icon: string;\n  public temp: string;\n  public city: string;\n  public description: string;\n  public feelsLike: string;\n  public lastUpdated: any;\n\n  constructor(private weatherSvc: WeatherService) {}\n\n  ngOnInit() {\n    this.weatherSvc.getCurrentWeather('UK', 'London').subscribe(\n      currentw => {\n        this.icon = currentw.weather.replace(new RegExp(' ', 'g'), '').toLowerCase();\n        if (this.icon === 'haze' || this.icon === 'clear') this.icon = 'cloud';\n        this.city = currentw.display_location.full;\n        this.temp = currentw.temp_c;\n        this.description = currentw.weather;\n        this.feelsLike = currentw.feelslike_c;\n        this.lastUpdated = moment.unix(currentw.observation_epoch).fromNow();\n      },\n      err => console.log('Weather data could not be retrieved', err));\n  }\n\n}\n"]}