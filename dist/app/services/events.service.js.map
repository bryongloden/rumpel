{"version":3,"file":"events.service.js","sourceRoot":"","sources":["../../Users/gusdev/code/rumpel/tmp/broccoli_type_script_compiler-input_base_path-f2J48Fb3.tmp/0/src/app/services/events.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs/Rx';\n\nimport { HatApiService } from './hat-api.service';\nimport { Event } from '../shared/index';\nimport * as moment from 'moment';\n\n@Injectable()\nexport class EventsService {\n  private events$: Observable<any>;\n  private eventsObserver: Observer<any>;\n  private store: { events: Array<Event> };\n\n  constructor(private _hat: HatApiService) {\n    this.store = { events: [] };\n    this.events$ = new Observable(observer => this.eventsObserver = observer).share();\n  }\n\n  showAll(): Observable<any> {\n    if (this.store.events.length > 0) {\n      console.log('Inside events if');\n      return Observable.of(this.store.events);\n    }\n\n    this.loadAll().subscribe(\n      data => {\n        const mergedData = data[0].concat(data[1]);\n        this.store.events = mergedData;\n        this.eventsObserver.next(this.store.events);\n      },\n      err => console.log(`Events table could not be found.`)\n    );\n    return this.events$;\n  }\n\n  loadAll(): Observable<any> {\n    return Observable.forkJoin(\n      this.loadFrom('facebook').map(events => events.map(this.fbMap)),\n      this.loadFrom('ical').map(events => events.map(this.icalMap)));\n  }\n\n  loadFrom(source: string): Observable<any> {\n    return this._hat.getAllValuesOf('events', source);\n  }\n\n  fbMap(event): Event {\n    return {\n      title: event.name,\n      description: event.description,\n      start: moment(event.start_time),\n      end: event.end_time ? moment(event.end_time) : null,\n      source: 'facebook'\n    };\n  }\n\n  icalMap(event): Event {\n    return {\n      title: event.summary,\n      description: event.description,\n      start: moment(event.startDate),\n      end: event.endDate ? moment(event.endDate) : null,\n      source: 'ical'\n    };\n  }\n}\n"]}