{"version":3,"file":"market-square.service.js","sourceRoot":"","sources":["../../Users/gusdev/code/rumpel/tmp/broccoli_type_script_compiler-input_base_path-f2J48Fb3.tmp/0/src/app/services/market-square.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAA8B,eAAe,CAAC,CAAA;AAI9C;IAIE,6BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAI,CAAC,OAAO,GAAG,6CAA6C,CAAC;QAC7D,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAO,EAAE,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;IAC3D,CAAC;IAED,sCAAQ,GAAR;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;aAChD,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAArC,CAAqC,CAAC,EAA5D,CAA4D,CAAC,CAAC;IACnF,CAAC;IAED,0CAAY,GAAZ;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;aAClD,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IAtBH;QAAC,iBAAU,EAAE;;2BAAA;IAwBb,0BAAC;AAAD,CAAC,AAvBD,IAuBC;AAvBY,2BAAmB,sBAuB/B,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\n\n@Injectable()\nexport class MarketSquareService {\n  private baseUrl: string;\n  private _headers: Headers;\n\n  constructor(private http: Http) {\n    this.baseUrl = 'https://marketsquare.hubofallthings.com/api';\n    this._headers = new Headers();\n    this._headers.append('Content-Type', 'application/json');\n  }\n\n  getOffer(): Observable<any> {\n    const url = this.baseUrl + '/offers';\n    return this.http.get(url, { headers: this._headers })\n        .map(res => res.json())\n        .map(offers => offers.sort((a, b) => b.offer.rating.up - a.offer.rating.up));\n  }\n\n  getDataPlugs(): Observable<any> {\n    const url = this.baseUrl + '/dataplugs';\n    return this.http.get(url, { headers: this._headers })\n      .map(res => res.json());\n  }\n\n}\n"]}