{"version":3,"file":"weather.service.js","sourceRoot":"","sources":["../../Users/gusdev/code/rumpel/tmp/broccoli_type_script_compiler-input_base_path-f2J48Fb3.tmp/0/src/app/services/weather.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAAqB,eAAe,CAAC,CAAA;AAIrC;IAIE,wBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAI,CAAC,OAAO,GAAG,kCAAkC,CAAC;QAClD,IAAI,CAAC,KAAK,GAAG,kBAAkB,CAAC;IAClC,CAAC;IAED,0CAAiB,GAAjB,UAAkB,OAAe,EAAE,IAAY;QAC7C,IAAM,GAAG,GAAM,IAAI,CAAC,OAAO,SAAI,IAAI,CAAC,KAAK,sBAAiB,OAAO,SAAI,IAAI,UAAO,CAAC;QACjF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aACtB,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,mBAAmB,EAA1B,CAA0B,CAAC,CAAC;IAC/C,CAAC;IAfH;QAAC,iBAAU,EAAE;;sBAAA;IAgBb,qBAAC;AAAD,CAAC,AAfD,IAeC;AAfY,sBAAc,iBAe1B,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\n\n@Injectable()\nexport class WeatherService {\n  private baseUrl: string;\n  private token: string;\n\n  constructor(private http: Http) {\n    this.baseUrl = 'https://api.wunderground.com/api';\n    this.token = '648b0984a45bdea3';\n  }\n\n  getCurrentWeather(country: string, city: string): Observable<any> {\n    const url = `${this.baseUrl}/${this.token}/conditions/q/${country}/${city}.json`;\n    return this.http.get(url)\n      .map(res => res.json())\n      .map(wunder => wunder.current_observation);\n  }\n}\n"]}