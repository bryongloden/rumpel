{"version":3,"file":"auth.component.js","sourceRoot":"","sources":["../../../Users/gusdev/code/rumpel/tmp/broccoli_type_script_compiler-input_base_path-f2J48Fb3.tmp/0/src/app/user-mgmt/auth/auth.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA6C,eAAe,CAAC,CAAA;AAC7D,uBAAuC,iBAAiB,CAAC,CAAA;AACzD,yBAA2C,gBAAgB,CAAC,CAAA;AAQ5D;IAKE,uBAAoB,MAAsB,EACtB,MAAc,EACd,IAAmB,EACnB,QAAqB;QAHrB,WAAM,GAAN,MAAM,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAe;QACnB,aAAQ,GAAR,QAAQ,CAAa;IAAG,CAAC;IAE7C,gCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,OAAO,GAAG,gCAAgC,CAAC;QAEhD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,YAAY;YACxD,EAAE,CAAC,CAAC,YAAY,CAAC;gBAAC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC5C,IAAI;gBAAC,KAAI,CAAC,OAAO,GAAG,gFAAgF,CAAC;QACvG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;YAClD,IAAI,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YAC7B,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAjCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,WAAW;YACrB,WAAW,EAAE,qBAAqB;YAClC,SAAS,EAAE,CAAC,oBAAoB,CAAC;SAClC,CAAC;;qBAAA;IA6BF,oBAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BY,qBAAa,gBA4BzB,CAAA","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService, HatApiService } from '../../services';\n\n@Component({\n  moduleId: module.id,\n  selector: 'rump-auth',\n  templateUrl: 'auth.component.html',\n  styleUrls: ['auth.component.css']\n})\nexport class AuthComponent implements OnInit, OnDestroy {\n  private _subRoute: any;\n  private _subAuth: any;\n  public message: string;\n\n  constructor(private _route: ActivatedRoute,\n              private router: Router,\n              private _hat: HatApiService,\n              private _authSvc: AuthService) {}\n\n  ngOnInit() {\n    this.message = 'Authenticating... Please hold.';\n\n    this._subAuth = this._authSvc.auth$.subscribe(isAuthorised => {\n      if (isAuthorised) this.router.navigate([''])\n      else this.message = 'Unfortunately authentication failed. Please contact your system administrator.';\n    });\n\n    this._subRoute = this._route.params.subscribe(params => {\n      let jwtToken = params['jwt'];\n      this._authSvc.authenticate(jwtToken);\n    });\n  }\n\n  ngOnDestroy() {\n    this._subRoute.unsubscribe();\n    this._subAuth.unsubscribe();\n  }\n}\n"]}